#############################################################################
# Makefile for building: trunk
# Generated by qmake (2.01a) (Qt 4.3.2) on: Fri Nov 9 21:23:01 2007
# Project:  trunk.pro
# Template: app
# Command: /usr/local/Trolltech/Qt-4.3.2/bin/qmake -unix -o Makefile trunk.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/local/Trolltech/Qt-4.3.2/mkspecs/linux-g++ -I. -I/usr/local/Trolltech/Qt-4.3.2/include/QtOpenGL -I/usr/local/Trolltech/Qt-4.3.2/include/QtCore -I/usr/local/Trolltech/Qt-4.3.2/include/QtGui -I/usr/local/Trolltech/Qt-4.3.2/include/QtGui -I/usr/local/Trolltech/Qt-4.3.2/include -I. -ISyntopiaCore/GLEngine -ISyntopiaCore/Math -ISyntopiaCore/Misc -ISyntopiaCore/Logging -ISyntopiaCore/Exceptions -IStructureSynth/Parser -IStructureSynth/Model -IStructureSynth/Model/Rendering -I. -I.
LINK          = g++
LFLAGS        = -Wl,-rpath,/usr/local/Trolltech/Qt-4.3.2/lib
LIBS          = $(SUBLIBS)  -L/usr/local/Trolltech/Qt-4.3.2/lib -lQtGui -lQtOpenGL -L/usr/local/Trolltech/Qt-4.3.2/lib -L/usr/X11R6/lib -lpng -lSM -lICE -pthread -pthread -lXi -lXrender -lXrandr -lXfixes -lXcursor -lXinerama -lfreetype -lfontconfig -lXext -lX11 -lQtCore -lz -lm -pthread -lgthread-2.0 -lrt -lglib-2.0 -ldl -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/local/Trolltech/Qt-4.3.2/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = Main.cpp \
		MainWindow.cpp \
		StructureSynth/Model/Action.cpp \
		StructureSynth/Model/AmbiguousRule.cpp \
		StructureSynth/Model/Builder.cpp \
		StructureSynth/Model/CustomRule.cpp \
		StructureSynth/Model/ExecutionStack.cpp \
		StructureSynth/Model/PrimitiveRule.cpp \
		StructureSynth/Model/Rule.cpp \
		StructureSynth/Model/RuleRef.cpp \
		StructureSynth/Model/RuleSet.cpp \
		StructureSynth/Model/State.cpp \
		StructureSynth/Model/Transformation.cpp \
		StructureSynth/Model/TransformationLoop.cpp \
		StructureSynth/Parser/EisenParser.cpp \
		StructureSynth/Parser/Preprocessor.cpp \
		StructureSynth/Parser/Tokenizer.cpp \
		SyntopiaCore/GLEngine/Box.cpp \
		SyntopiaCore/GLEngine/Dot.cpp \
		SyntopiaCore/GLEngine/EngineWidget.cpp \
		SyntopiaCore/GLEngine/Grid.cpp \
		SyntopiaCore/GLEngine/Line.cpp \
		SyntopiaCore/GLEngine/Object3D.cpp \
		SyntopiaCore/GLEngine/Sphere.cpp \
		SyntopiaCore/Logging/ListWidgetLogger.cpp \
		SyntopiaCore/Logging/Logging.cpp \
		SyntopiaCore/Math/Matrix4.cpp \
		SyntopiaCore/Math/Vector3.cpp \
		SyntopiaCore/Misc/ColorUtils.cpp \
		SyntopiaCore/Misc/Version.cpp \
		StructureSynth/Model/Rendering/OpenGLRenderer.cpp \
		StructureSynth/Model/Rendering/POVRenderer.cpp \
		StructureSynth/Model/Rendering/Renderer.cpp moc_MainWindow.cpp \
		qrc_StructureSynth.cpp
OBJECTS       = Main.o \
		MainWindow.o \
		Action.o \
		AmbiguousRule.o \
		Builder.o \
		CustomRule.o \
		ExecutionStack.o \
		PrimitiveRule.o \
		Rule.o \
		RuleRef.o \
		RuleSet.o \
		State.o \
		Transformation.o \
		TransformationLoop.o \
		EisenParser.o \
		Preprocessor.o \
		Tokenizer.o \
		Box.o \
		Dot.o \
		EngineWidget.o \
		Grid.o \
		Line.o \
		Object3D.o \
		Sphere.o \
		ListWidgetLogger.o \
		Logging.o \
		Matrix4.o \
		Vector3.o \
		ColorUtils.o \
		Version.o \
		OpenGLRenderer.o \
		POVRenderer.o \
		Renderer.o \
		moc_MainWindow.o \
		qrc_StructureSynth.o
DIST          = /usr/local/Trolltech/Qt-4.3.2/mkspecs/common/g++.conf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/common/unix.conf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/common/linux.conf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/qconfig.pri \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/qt_functions.prf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/qt_config.prf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/exclusive_builds.prf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/default_pre.prf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/release.prf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/default_post.prf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/warn_on.prf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/qt.prf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/unix/thread.prf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/moc.prf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/resources.prf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/uic.prf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/yacc.prf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/lex.prf \
		trunk.pro
QMAKE_TARGET  = trunk
DESTDIR       = 
TARGET        = trunk

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: trunk.pro  /usr/local/Trolltech/Qt-4.3.2/mkspecs/linux-g++/qmake.conf /usr/local/Trolltech/Qt-4.3.2/mkspecs/common/g++.conf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/common/unix.conf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/common/linux.conf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/qconfig.pri \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/qt_functions.prf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/qt_config.prf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/exclusive_builds.prf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/default_pre.prf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/release.prf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/default_post.prf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/warn_on.prf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/qt.prf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/unix/thread.prf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/moc.prf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/resources.prf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/uic.prf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/yacc.prf \
		/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/lex.prf \
		/usr/local/Trolltech/Qt-4.3.2/lib/libQtGui.prl \
		/usr/local/Trolltech/Qt-4.3.2/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile trunk.pro
/usr/local/Trolltech/Qt-4.3.2/mkspecs/common/g++.conf:
/usr/local/Trolltech/Qt-4.3.2/mkspecs/common/unix.conf:
/usr/local/Trolltech/Qt-4.3.2/mkspecs/common/linux.conf:
/usr/local/Trolltech/Qt-4.3.2/mkspecs/qconfig.pri:
/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/qt_functions.prf:
/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/qt_config.prf:
/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/exclusive_builds.prf:
/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/default_pre.prf:
/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/release.prf:
/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/default_post.prf:
/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/warn_on.prf:
/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/qt.prf:
/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/unix/thread.prf:
/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/moc.prf:
/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/resources.prf:
/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/uic.prf:
/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/yacc.prf:
/usr/local/Trolltech/Qt-4.3.2/mkspecs/features/lex.prf:
/usr/local/Trolltech/Qt-4.3.2/lib/libQtGui.prl:
/usr/local/Trolltech/Qt-4.3.2/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile trunk.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/trunk1.0.0 || $(MKDIR) .tmp/trunk1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/trunk1.0.0/ && $(COPY_FILE) --parents MainWindow.h StructureSynth/Model/Action.h StructureSynth/Model/AmbiguousRule.h StructureSynth/Model/Builder.h StructureSynth/Model/CustomRule.h StructureSynth/Model/ExecutionStack.h StructureSynth/Model/PrimitiveRule.h StructureSynth/Model/Rule.h StructureSynth/Model/RuleRef.h StructureSynth/Model/RuleSet.h StructureSynth/Model/State.h StructureSynth/Model/Transformation.h StructureSynth/Model/TransformationLoop.h StructureSynth/Parser/EisenParser.h StructureSynth/Parser/Preprocessor.h StructureSynth/Parser/Tokenizer.h SyntopiaCore/Exceptions/Exception.h SyntopiaCore/GLEngine/Box.h SyntopiaCore/GLEngine/Dot.h SyntopiaCore/GLEngine/EngineWidget.h SyntopiaCore/GLEngine/Grid.h SyntopiaCore/GLEngine/Line.h SyntopiaCore/GLEngine/Object3D.h SyntopiaCore/GLEngine/Sphere.h SyntopiaCore/Logging/ListWidgetLogger.h SyntopiaCore/Logging/Logging.h SyntopiaCore/Math/Matrix4.h SyntopiaCore/Math/Vector3.h SyntopiaCore/Misc/ColorUtils.h SyntopiaCore/Misc/Version.h StructureSynth/Model/Rendering/OpenGLRenderer.h StructureSynth/Model/Rendering/POVRenderer.h StructureSynth/Model/Rendering/Renderer.h .tmp/trunk1.0.0/ && $(COPY_FILE) --parents StructureSynth.qrc .tmp/trunk1.0.0/ && $(COPY_FILE) --parents Main.cpp MainWindow.cpp StructureSynth/Model/Action.cpp StructureSynth/Model/AmbiguousRule.cpp StructureSynth/Model/Builder.cpp StructureSynth/Model/CustomRule.cpp StructureSynth/Model/ExecutionStack.cpp StructureSynth/Model/PrimitiveRule.cpp StructureSynth/Model/Rule.cpp StructureSynth/Model/RuleRef.cpp StructureSynth/Model/RuleSet.cpp StructureSynth/Model/State.cpp StructureSynth/Model/Transformation.cpp StructureSynth/Model/TransformationLoop.cpp StructureSynth/Parser/EisenParser.cpp StructureSynth/Parser/Preprocessor.cpp StructureSynth/Parser/Tokenizer.cpp SyntopiaCore/GLEngine/Box.cpp SyntopiaCore/GLEngine/Dot.cpp SyntopiaCore/GLEngine/EngineWidget.cpp SyntopiaCore/GLEngine/Grid.cpp SyntopiaCore/GLEngine/Line.cpp SyntopiaCore/GLEngine/Object3D.cpp SyntopiaCore/GLEngine/Sphere.cpp SyntopiaCore/Logging/ListWidgetLogger.cpp SyntopiaCore/Logging/Logging.cpp SyntopiaCore/Math/Matrix4.cpp SyntopiaCore/Math/Vector3.cpp SyntopiaCore/Misc/ColorUtils.cpp SyntopiaCore/Misc/Version.cpp StructureSynth/Model/Rendering/OpenGLRenderer.cpp StructureSynth/Model/Rendering/POVRenderer.cpp StructureSynth/Model/Rendering/Renderer.cpp .tmp/trunk1.0.0/ && (cd `dirname .tmp/trunk1.0.0` && $(TAR) trunk1.0.0.tar trunk1.0.0 && $(COMPRESS) trunk1.0.0.tar) && $(MOVE) `dirname .tmp/trunk1.0.0`/trunk1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/trunk1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_MainWindow.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_MainWindow.cpp
moc_MainWindow.cpp: SyntopiaCore/GLEngine/EngineWidget.h \
		SyntopiaCore/Math/Vector3.h \
		SyntopiaCore/Math/Matrix4.h \
		SyntopiaCore/GLEngine/Object3D.h \
		SyntopiaCore/Misc/Version.h \
		MainWindow.h
	/usr/local/Trolltech/Qt-4.3.2/bin/moc $(DEFINES) $(INCPATH) MainWindow.h -o moc_MainWindow.cpp

compiler_rcc_make_all: qrc_StructureSynth.cpp
compiler_rcc_clean:
	-$(DEL_FILE) qrc_StructureSynth.cpp
qrc_StructureSynth.cpp: StructureSynth.qrc \
		images/new.png \
		images/copy.png \
		images/cut.png \
		images/save.png \
		images/paste.png \
		images/render.png \
		images/open.png
	/usr/local/Trolltech/Qt-4.3.2/bin/rcc -name StructureSynth StructureSynth.qrc -o qrc_StructureSynth.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean 

####### Compile

Main.o: Main.cpp MainWindow.h \
		SyntopiaCore/GLEngine/EngineWidget.h \
		SyntopiaCore/Math/Vector3.h \
		SyntopiaCore/Math/Matrix4.h \
		SyntopiaCore/GLEngine/Object3D.h \
		SyntopiaCore/Misc/Version.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Main.o Main.cpp

MainWindow.o: MainWindow.cpp MainWindow.h \
		SyntopiaCore/GLEngine/EngineWidget.h \
		SyntopiaCore/Math/Vector3.h \
		SyntopiaCore/Math/Matrix4.h \
		SyntopiaCore/GLEngine/Object3D.h \
		SyntopiaCore/Misc/Version.h \
		SyntopiaCore/Logging/ListWidgetLogger.h \
		SyntopiaCore/Logging/Logging.h \
		SyntopiaCore/Exceptions/Exception.h \
		StructureSynth/Parser/EisenParser.h \
		StructureSynth/Parser/Tokenizer.h \
		StructureSynth/Model/Transformation.h \
		StructureSynth/Model/State.h \
		StructureSynth/Model/Rule.h \
		StructureSynth/Model/Rendering/Renderer.h \
		StructureSynth/Model/CustomRule.h \
		StructureSynth/Model/Action.h \
		StructureSynth/Model/RuleRef.h \
		StructureSynth/Model/TransformationLoop.h \
		StructureSynth/Model/RuleSet.h \
		StructureSynth/Model/Rendering/OpenGLRenderer.h \
		StructureSynth/Model/Rendering/POVRenderer.h \
		StructureSynth/Parser/Preprocessor.h \
		StructureSynth/Model/Builder.h \
		StructureSynth/Model/ExecutionStack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o MainWindow.o MainWindow.cpp

Action.o: StructureSynth/Model/Action.cpp StructureSynth/Model/Action.h \
		StructureSynth/Model/RuleRef.h \
		StructureSynth/Model/Rule.h \
		StructureSynth/Model/Rendering/Renderer.h \
		SyntopiaCore/Math/Vector3.h \
		StructureSynth/Model/State.h \
		SyntopiaCore/Math/Matrix4.h \
		StructureSynth/Model/TransformationLoop.h \
		StructureSynth/Model/Transformation.h \
		StructureSynth/Model/ExecutionStack.h \
		StructureSynth/Model/Builder.h \
		StructureSynth/Model/RuleSet.h \
		StructureSynth/Model/CustomRule.h \
		SyntopiaCore/Logging/Logging.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Action.o StructureSynth/Model/Action.cpp

AmbiguousRule.o: StructureSynth/Model/AmbiguousRule.cpp StructureSynth/Model/AmbiguousRule.h \
		StructureSynth/Model/Rule.h \
		StructureSynth/Model/Rendering/Renderer.h \
		SyntopiaCore/Math/Vector3.h \
		StructureSynth/Model/State.h \
		SyntopiaCore/Math/Matrix4.h \
		StructureSynth/Model/CustomRule.h \
		StructureSynth/Model/Action.h \
		StructureSynth/Model/RuleRef.h \
		StructureSynth/Model/TransformationLoop.h \
		StructureSynth/Model/Transformation.h \
		StructureSynth/Model/Builder.h \
		StructureSynth/Model/RuleSet.h \
		StructureSynth/Model/ExecutionStack.h \
		SyntopiaCore/Logging/Logging.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AmbiguousRule.o StructureSynth/Model/AmbiguousRule.cpp

Builder.o: StructureSynth/Model/Builder.cpp StructureSynth/Model/Builder.h \
		StructureSynth/Model/Rendering/Renderer.h \
		SyntopiaCore/Math/Vector3.h \
		StructureSynth/Model/RuleSet.h \
		StructureSynth/Model/Rule.h \
		StructureSynth/Model/State.h \
		SyntopiaCore/Math/Matrix4.h \
		StructureSynth/Model/CustomRule.h \
		StructureSynth/Model/Action.h \
		StructureSynth/Model/RuleRef.h \
		StructureSynth/Model/TransformationLoop.h \
		StructureSynth/Model/Transformation.h \
		StructureSynth/Model/ExecutionStack.h \
		SyntopiaCore/Logging/Logging.h \
		SyntopiaCore/Exceptions/Exception.h \
		SyntopiaCore/Misc/ColorUtils.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Builder.o StructureSynth/Model/Builder.cpp

CustomRule.o: StructureSynth/Model/CustomRule.cpp StructureSynth/Model/CustomRule.h \
		StructureSynth/Model/Rule.h \
		StructureSynth/Model/Rendering/Renderer.h \
		SyntopiaCore/Math/Vector3.h \
		StructureSynth/Model/State.h \
		SyntopiaCore/Math/Matrix4.h \
		StructureSynth/Model/Action.h \
		StructureSynth/Model/RuleRef.h \
		StructureSynth/Model/TransformationLoop.h \
		StructureSynth/Model/Transformation.h \
		SyntopiaCore/Logging/Logging.h \
		StructureSynth/Model/Builder.h \
		StructureSynth/Model/RuleSet.h \
		StructureSynth/Model/ExecutionStack.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o CustomRule.o StructureSynth/Model/CustomRule.cpp

ExecutionStack.o: StructureSynth/Model/ExecutionStack.cpp StructureSynth/Model/Rule.h \
		StructureSynth/Model/Rendering/Renderer.h \
		SyntopiaCore/Math/Vector3.h \
		StructureSynth/Model/State.h \
		SyntopiaCore/Math/Matrix4.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ExecutionStack.o StructureSynth/Model/ExecutionStack.cpp

PrimitiveRule.o: StructureSynth/Model/PrimitiveRule.cpp StructureSynth/Model/PrimitiveRule.h \
		StructureSynth/Model/Rule.h \
		StructureSynth/Model/Rendering/Renderer.h \
		SyntopiaCore/Math/Vector3.h \
		StructureSynth/Model/State.h \
		SyntopiaCore/Math/Matrix4.h \
		StructureSynth/Model/Builder.h \
		StructureSynth/Model/RuleSet.h \
		StructureSynth/Model/CustomRule.h \
		StructureSynth/Model/Action.h \
		StructureSynth/Model/RuleRef.h \
		StructureSynth/Model/TransformationLoop.h \
		StructureSynth/Model/Transformation.h \
		StructureSynth/Model/ExecutionStack.h \
		SyntopiaCore/Exceptions/Exception.h \
		SyntopiaCore/Logging/Logging.h \
		SyntopiaCore/Misc/ColorUtils.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o PrimitiveRule.o StructureSynth/Model/PrimitiveRule.cpp

Rule.o: StructureSynth/Model/Rule.cpp StructureSynth/Model/Rule.h \
		StructureSynth/Model/Rendering/Renderer.h \
		SyntopiaCore/Math/Vector3.h \
		StructureSynth/Model/State.h \
		SyntopiaCore/Math/Matrix4.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Rule.o StructureSynth/Model/Rule.cpp

RuleRef.o: StructureSynth/Model/RuleRef.cpp StructureSynth/Model/Rule.h \
		StructureSynth/Model/Rendering/Renderer.h \
		SyntopiaCore/Math/Vector3.h \
		StructureSynth/Model/State.h \
		SyntopiaCore/Math/Matrix4.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o RuleRef.o StructureSynth/Model/RuleRef.cpp

RuleSet.o: StructureSynth/Model/RuleSet.cpp StructureSynth/Model/RuleSet.h \
		StructureSynth/Model/Rule.h \
		StructureSynth/Model/Rendering/Renderer.h \
		SyntopiaCore/Math/Vector3.h \
		StructureSynth/Model/State.h \
		SyntopiaCore/Math/Matrix4.h \
		StructureSynth/Model/CustomRule.h \
		StructureSynth/Model/Action.h \
		StructureSynth/Model/RuleRef.h \
		StructureSynth/Model/TransformationLoop.h \
		StructureSynth/Model/Transformation.h \
		StructureSynth/Model/AmbiguousRule.h \
		StructureSynth/Model/PrimitiveRule.h \
		SyntopiaCore/Exceptions/Exception.h \
		SyntopiaCore/Logging/Logging.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o RuleSet.o StructureSynth/Model/RuleSet.cpp

State.o: StructureSynth/Model/State.cpp StructureSynth/Model/State.h \
		SyntopiaCore/Math/Matrix4.h \
		SyntopiaCore/Math/Vector3.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o State.o StructureSynth/Model/State.cpp

Transformation.o: StructureSynth/Model/Transformation.cpp StructureSynth/Model/Transformation.h \
		StructureSynth/Model/State.h \
		SyntopiaCore/Math/Matrix4.h \
		SyntopiaCore/Math/Vector3.h \
		SyntopiaCore/Exceptions/Exception.h \
		SyntopiaCore/Logging/Logging.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Transformation.o StructureSynth/Model/Transformation.cpp

TransformationLoop.o: StructureSynth/Model/TransformationLoop.cpp StructureSynth/Model/TransformationLoop.h \
		StructureSynth/Model/Transformation.h \
		StructureSynth/Model/State.h \
		SyntopiaCore/Math/Matrix4.h \
		SyntopiaCore/Math/Vector3.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o TransformationLoop.o StructureSynth/Model/TransformationLoop.cpp

EisenParser.o: StructureSynth/Parser/EisenParser.cpp StructureSynth/Parser/EisenParser.h \
		StructureSynth/Parser/Tokenizer.h \
		SyntopiaCore/Exceptions/Exception.h \
		StructureSynth/Model/Transformation.h \
		StructureSynth/Model/State.h \
		SyntopiaCore/Math/Matrix4.h \
		SyntopiaCore/Math/Vector3.h \
		StructureSynth/Model/Rule.h \
		StructureSynth/Model/Rendering/Renderer.h \
		StructureSynth/Model/CustomRule.h \
		StructureSynth/Model/Action.h \
		StructureSynth/Model/RuleRef.h \
		StructureSynth/Model/TransformationLoop.h \
		StructureSynth/Model/RuleSet.h \
		SyntopiaCore/Logging/Logging.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o EisenParser.o StructureSynth/Parser/EisenParser.cpp

Preprocessor.o: StructureSynth/Parser/Preprocessor.cpp StructureSynth/Parser/Preprocessor.h \
		SyntopiaCore/Exceptions/Exception.h \
		SyntopiaCore/Logging/Logging.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Preprocessor.o StructureSynth/Parser/Preprocessor.cpp

Tokenizer.o: StructureSynth/Parser/Tokenizer.cpp StructureSynth/Parser/Tokenizer.h \
		SyntopiaCore/Exceptions/Exception.h \
		SyntopiaCore/Logging/Logging.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Tokenizer.o StructureSynth/Parser/Tokenizer.cpp

Box.o: SyntopiaCore/GLEngine/Box.cpp SyntopiaCore/GLEngine/Box.h \
		SyntopiaCore/Math/Vector3.h \
		SyntopiaCore/GLEngine/Object3D.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Box.o SyntopiaCore/GLEngine/Box.cpp

Dot.o: SyntopiaCore/GLEngine/Dot.cpp SyntopiaCore/GLEngine/Dot.h \
		SyntopiaCore/Math/Vector3.h \
		SyntopiaCore/GLEngine/Object3D.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Dot.o SyntopiaCore/GLEngine/Dot.cpp

EngineWidget.o: SyntopiaCore/GLEngine/EngineWidget.cpp SyntopiaCore/GLEngine/EngineWidget.h \
		SyntopiaCore/Math/Vector3.h \
		SyntopiaCore/Math/Matrix4.h \
		SyntopiaCore/GLEngine/Object3D.h \
		SyntopiaCore/Logging/Logging.h \
		SyntopiaCore/GLEngine/Sphere.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o EngineWidget.o SyntopiaCore/GLEngine/EngineWidget.cpp

Grid.o: SyntopiaCore/GLEngine/Grid.cpp SyntopiaCore/GLEngine/Grid.h \
		SyntopiaCore/Math/Vector3.h \
		SyntopiaCore/GLEngine/Object3D.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Grid.o SyntopiaCore/GLEngine/Grid.cpp

Line.o: SyntopiaCore/GLEngine/Line.cpp SyntopiaCore/GLEngine/Line.h \
		SyntopiaCore/Math/Vector3.h \
		SyntopiaCore/GLEngine/Object3D.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Line.o SyntopiaCore/GLEngine/Line.cpp

Object3D.o: SyntopiaCore/GLEngine/Object3D.cpp SyntopiaCore/GLEngine/Object3D.h \
		SyntopiaCore/Math/Vector3.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Object3D.o SyntopiaCore/GLEngine/Object3D.cpp

Sphere.o: SyntopiaCore/GLEngine/Sphere.cpp SyntopiaCore/GLEngine/Sphere.h \
		SyntopiaCore/Math/Vector3.h \
		SyntopiaCore/GLEngine/Object3D.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Sphere.o SyntopiaCore/GLEngine/Sphere.cpp

ListWidgetLogger.o: SyntopiaCore/Logging/ListWidgetLogger.cpp SyntopiaCore/Logging/ListWidgetLogger.h \
		SyntopiaCore/Logging/Logging.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ListWidgetLogger.o SyntopiaCore/Logging/ListWidgetLogger.cpp

Logging.o: SyntopiaCore/Logging/Logging.cpp SyntopiaCore/Logging/Logging.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Logging.o SyntopiaCore/Logging/Logging.cpp

Matrix4.o: SyntopiaCore/Math/Matrix4.cpp SyntopiaCore/Math/Matrix4.h \
		SyntopiaCore/Math/Vector3.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Matrix4.o SyntopiaCore/Math/Matrix4.cpp

Vector3.o: SyntopiaCore/Math/Vector3.cpp SyntopiaCore/Math/Vector3.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Vector3.o SyntopiaCore/Math/Vector3.cpp

ColorUtils.o: SyntopiaCore/Misc/ColorUtils.cpp SyntopiaCore/Misc/ColorUtils.h \
		SyntopiaCore/Math/Vector3.h \
		SyntopiaCore/Logging/Logging.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ColorUtils.o SyntopiaCore/Misc/ColorUtils.cpp

Version.o: SyntopiaCore/Misc/Version.cpp SyntopiaCore/Misc/Version.h \
		SyntopiaCore/Logging/Logging.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Version.o SyntopiaCore/Misc/Version.cpp

OpenGLRenderer.o: StructureSynth/Model/Rendering/OpenGLRenderer.cpp StructureSynth/Model/Rendering/OpenGLRenderer.h \
		SyntopiaCore/GLEngine/EngineWidget.h \
		SyntopiaCore/Math/Vector3.h \
		SyntopiaCore/Math/Matrix4.h \
		SyntopiaCore/GLEngine/Object3D.h \
		StructureSynth/Model/Rendering/Renderer.h \
		SyntopiaCore/GLEngine/Sphere.h \
		SyntopiaCore/GLEngine/Box.h \
		SyntopiaCore/GLEngine/Grid.h \
		SyntopiaCore/GLEngine/Dot.h \
		SyntopiaCore/GLEngine/Line.h \
		SyntopiaCore/Logging/Logging.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o OpenGLRenderer.o StructureSynth/Model/Rendering/OpenGLRenderer.cpp

POVRenderer.o: StructureSynth/Model/Rendering/POVRenderer.cpp StructureSynth/Model/Rendering/POVRenderer.h \
		StructureSynth/Model/Rendering/Renderer.h \
		SyntopiaCore/Math/Vector3.h \
		SyntopiaCore/Logging/Logging.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o POVRenderer.o StructureSynth/Model/Rendering/POVRenderer.cpp

Renderer.o: StructureSynth/Model/Rendering/Renderer.cpp StructureSynth/Model/Rendering/Renderer.h \
		SyntopiaCore/Math/Vector3.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Renderer.o StructureSynth/Model/Rendering/Renderer.cpp

moc_MainWindow.o: moc_MainWindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_MainWindow.o moc_MainWindow.cpp

qrc_StructureSynth.o: qrc_StructureSynth.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qrc_StructureSynth.o qrc_StructureSynth.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

